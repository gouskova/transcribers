facet.grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum O"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
p
p = ggplot(sims, aes(x=status))+
geom_dotplot(method='histodot', binwidth=40)+
ylim=(0,1)+
theme_bw()+
facet.grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum O"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
p
p = ggplot(sims, aes(x=status))+
geom_dotplot(method='histodot', binwidth=40)+
ylim(0,1)+
theme_bw()+
facet.grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum O"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
p
p = ggplot(sims, aes(x=status))+
geom_dotplot(method='histodot', binwidth=40)+
#  ylim(0,1)+
theme_bw()+
facet.grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum O"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
p
hist(sims$harmony)
#this is for analyzing the results of simulations in the projection learner
basedir = '/home/maria/git/phonotactics'
basedir = '/Users/imac2010/git/phonotactics'
lgname='quechua'
datadir = paste(basedir, 'data', lgname, sep='/')
simdir = paste(basedir, 'sims', sep = '/')
plotdir=paste(basedir,'R', sep='/')
dataversions = list('rootslongvot', 'rootsnew')
#, 'wds', 'wdslongvot')
#the testing data files tell us which words are supposed to be legal and illegal
#testfilekeys = lapply(dataversions, function(x) read.csv(paste(datadir, x, 'TestingData.txt', sep='/'), sep="\t", header=F))
#head(testfilekeys)
#ncol(testfilekeys)
#sim = do.call(rbind, testfilekeys)
sim = read.csv(paste(basedir, '/R/test_key.txt', sep=""), sep="\t", header=F)
colnames(sim)=c('item', 'status')
sim=unique(sim)
#the actual test results from the simulations:
simfolders = list.dirs(simdir)[grepl(lgname, list.dirs(simdir)) & grepl('output_megapruned$', list.dirs(simdir))] #just the quechua ones
simnames=lapply(simfolders, function(x) gsub(simdir, '', x))
simnames=lapply(simnames, function(x) gsub('output_megapruned', '', x))
simtableaux = lapply(simfolders, function(x) read.csv(paste(x, 'tableau.txt', sep='/'), sep="\t", header=T))
for (i in 1:length(simnames)){
simnames[[i]]=gsub('/', '', simnames[[i]])
simtableaux[[i]] = simtableaux[[i]][,1:3]
colnames(simtableaux[[i]])=c('item', 'harmony', 'logprob')
simtableaux[[i]]$simname = simnames[[i]]
}
sims = do.call(rbind, simtableaux)
head(sims)
length(sims$item)
sims = merge(sims, sim)
#PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS
orderofwdtypes=c("Legal", "*[ʔatʼa]", "*[hatʰa]", "*[pʰatʰa]", "*[pʰat'a]", "*[p'atʰa]","*[pʼatʼa]",  "*[patʰa]", "*[pat'a]")
sims$wdtype="Legal"
#the semi-good ones:
sims$wdtype=ifelse(sims$status=='gl-ej',"*[ʔatʼa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='h-asp',"*[hatʰa]", sims$wdtype)
#the bad hombres:
sims$wdtype=ifelse(sims$status=='asp-asp',"*[pʰatʰa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='asp-ej',"*[pʰat'a]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='ej-asp',"*[p'atʰa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='ej-ej',"*[pʼatʼa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='pl-asp',"*[patʰa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='pl-ej',"*[pat'a]", sims$wdtype)
sims$wdtype=factor(sims$wdtype, levels=orderofwdtypes)
library(ggplot2)
library(reshape2)
library(plyr)
chartmode='screen'
head(sims)
summary(sims)
#defining the plot viewing device so that it works on linux and mac os
dev.new<-function(filename, pwidth=12, pheight=7){
chartmode='pdf'
filename=paste(plotdir,filename, sep="/")
platform<-sessionInfo()$platform
if(grepl("linux", platform)){
x11(width=pwidth, height=pheight)
pdf(file=filename)
}
else if(grepl('apple', platform)){
quartz(type=chartmode, file=filename, width=pwidth, height=pheight)
}
}
#violin plot function for quechua simulations
#for some reason this isn't working correctly--use the hacky workaround on lines 111+ instead
plot_sim = function(dframe, filename, ptitle=''){
dev.new(filename)
p = ggplot(dframe, aes(x=wdtype, y=harmony))+
#  geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2)+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.2)+
ggtitle(ptitle)+
ylab('Harmony scores')+
theme_bw()+
stat_summary(fun.y=mean, geom='point', shape=18, size=3, color='red')+
#if you want to see the simulation types side by side:
#  facet_grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
#  coord_flip()
p
dev.off()
}
plot_sim(temp, filename='simulation_plot_for_quechua_longVOT.pdf', ptitle='Quechua, roots only, with [longVOT]')
temp=subset(sims, simname='2017-03-08_quechua_rootsnew_wb')
#plot_sim(temp, filename='simulation_plot_for_quechua_stdfeats.pdf', ptitle='Quechua, roots only, standard laryngeal feature set ([cg] and [sg])')
ptitle='Quechua, roots only, standard laryngeal feature set ([cg] and [sg])'
dev.new('simulation_plot_for_quechua_stdfeats.pdf')
p = ggplot(temp, aes(x=wdtype, y=harmony))+
#  geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2)+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.2)+
ggtitle(ptitle)+
ylab('Harmony scores')+
theme_bw()+
stat_summary(fun.y=mean, geom='point', shape=18, size=3, color='red')+
#if you want to see the simulation types side by side:
#  facet_grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
#  coord_flip()
p
dev.off()
p = ggplot(temp, aes(x=wdtype, y=harmony))+
#  geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2)+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.2)+
ggtitle(ptitle)+
ylab('Harmony scores')+
theme_bw()+
stat_summary(fun.y=mean, geom='point', shape=18, size=3, color='red')+
#if you want to see the simulation types side by side:
#  facet_grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
#  coord_flip()
p
temp=subset(sims, simname='2017-03-08_quechua_rootsnew_wb')
#this is for analyzing the results of simulations in the projection learner
basedir = '/home/maria/git/phonotactics'
basedir = '/Users/imac2010/git/phonotactics'
lgname='quechua'
datadir = paste(basedir, 'data', lgname, sep='/')
simdir = paste(basedir, 'sims', sep = '/')
plotdir=paste(basedir,'R', sep='/')
dataversions = list('rootslongvot', 'rootsnew')
#, 'wds', 'wdslongvot')
#the testing data files tell us which words are supposed to be legal and illegal
#testfilekeys = lapply(dataversions, function(x) read.csv(paste(datadir, x, 'TestingData.txt', sep='/'), sep="\t", header=F))
#head(testfilekeys)
#ncol(testfilekeys)
#sim = do.call(rbind, testfilekeys)
sim = read.csv(paste(basedir, '/R/test_key.txt', sep=""), sep="\t", header=F)
colnames(sim)=c('item', 'status')
sim=unique(sim)
#the actual test results from the simulations:
simfolders = list.dirs(simdir)[grepl(lgname, list.dirs(simdir)) & grepl('output_megapruned$', list.dirs(simdir))] #just the quechua ones
simnames=lapply(simfolders, function(x) gsub(simdir, '', x))
simnames=lapply(simnames, function(x) gsub('output_megapruned', '', x))
simtableaux = lapply(simfolders, function(x) read.csv(paste(x, 'tableau.txt', sep='/'), sep="\t", header=T))
for (i in 1:length(simnames)){
simnames[[i]]=gsub('/', '', simnames[[i]])
simtableaux[[i]] = simtableaux[[i]][,1:3]
colnames(simtableaux[[i]])=c('item', 'harmony', 'logprob')
simtableaux[[i]]$simname = simnames[[i]]
}
sims = do.call(rbind, simtableaux)
head(sims)
length(sims$item)
sims = merge(sims, sim)
#PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS
orderofwdtypes=c("Legal", "*[ʔatʼa]", "*[hatʰa]", "*[pʰatʰa]", "*[pʰat'a]", "*[p'atʰa]","*[pʼatʼa]",  "*[patʰa]", "*[pat'a]")
sims$wdtype="Legal"
#the semi-good ones:
sims$wdtype=ifelse(sims$status=='gl-ej',"*[ʔatʼa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='h-asp',"*[hatʰa]", sims$wdtype)
#the bad hombres:
sims$wdtype=ifelse(sims$status=='asp-asp',"*[pʰatʰa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='asp-ej',"*[pʰat'a]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='ej-asp',"*[p'atʰa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='ej-ej',"*[pʼatʼa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='pl-asp',"*[patʰa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='pl-ej',"*[pat'a]", sims$wdtype)
sims$wdtype=factor(sims$wdtype, levels=orderofwdtypes)
library(ggplot2)
library(reshape2)
library(plyr)
chartmode='screen'
head(sims)
summary(sims)
#defining the plot viewing device so that it works on linux and mac os
temp=subset(sims, simname='2017-03-08_quechua_rootsnew_wb')
temp=subset(sims, simname=='2017-03-08_quechua_rootsnew_wb')
head(sims)
basedir = '/home/maria/git/phonotactics'
lgname='quechua'
datadir = paste(basedir, 'data', lgname, sep='/')
simdir = paste(basedir, 'sims', sep = '/')
plotdir=paste(basedir,'R', sep='/')
dataversions = list('rootslongvot', 'rootsnew')
#, 'wds', 'wdslongvot')
#the testing data files tell us which words are supposed to be legal and illegal
#testfilekeys = lapply(dataversions, function(x) read.csv(paste(datadir, x, 'TestingData.txt', sep='/'), sep="\t", header=F))
#head(testfilekeys)
#ncol(testfilekeys)
#sim = do.call(rbind, testfilekeys)
sim = read.csv(paste(basedir, '/R/test_key.txt', sep=""), sep="\t", header=F)
colnames(sim)=c('item', 'status')
sim=unique(sim)
#the actual test results from the simulations:
simfolders = list.dirs(simdir)[grepl(lgname, list.dirs(simdir)) & grepl('output_megapruned$', list.dirs(simdir))] #just the quechua ones
simnames=lapply(simfolders, function(x) gsub(simdir, '', x))
simnames=lapply(simnames, function(x) gsub('output_megapruned', '', x))
simtableaux = lapply(simfolders, function(x) read.csv(paste(x, 'tableau.txt', sep='/'), sep="\t", header=T))
for (i in 1:length(simnames)){
simnames[[i]]=gsub('/', '', simnames[[i]])
simtableaux[[i]] = simtableaux[[i]][,1:3]
colnames(simtableaux[[i]])=c('item', 'harmony', 'logprob')
simtableaux[[i]]$simname = simnames[[i]]
}
sims = do.call(rbind, simtableaux)
head(sims)
length(sims$item)
sims = merge(sims, sim)
#PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS
orderofwdtypes=c("Legal", "*[ʔatʼa]", "*[hatʰa]", "*[pʰatʰa]", "*[pʰat'a]", "*[p'atʰa]","*[pʼatʼa]",  "*[patʰa]", "*[pat'a]")
sims$wdtype="Legal"
#the semi-good ones:
sims$wdtype=ifelse(sims$status=='gl-ej',"*[ʔatʼa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='h-asp',"*[hatʰa]", sims$wdtype)
#the bad hombres:
sims$wdtype=ifelse(sims$status=='asp-asp',"*[pʰatʰa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='asp-ej',"*[pʰat'a]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='ej-asp',"*[p'atʰa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='ej-ej',"*[pʼatʼa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='pl-asp',"*[patʰa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='pl-ej',"*[pat'a]", sims$wdtype)
sims$wdtype=factor(sims$wdtype, levels=orderofwdtypes)
library(ggplot2)
library(reshape2)
library(plyr)
chartmode='screen'
head(sims)
summary(sims)
dev.new<-function(filename, pwidth=12, pheight=7){
chartmode='pdf'
filename=paste(plotdir,filename, sep="/")
platform<-sessionInfo()$platform
if(grepl("linux", platform)){
x11(width=pwidth, height=pheight)
pdf(file=filename)
}
else if(grepl('apple', platform)){
quartz(type=chartmode, file=filename, width=pwidth, height=pheight)
}
}
plot_sim = function(dframe, filename, ptitle=''){
dev.new(filename)
p = ggplot(dframe, aes(x=wdtype, y=harmony))+
#  geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2)+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.2)+
ggtitle(ptitle)+
ylab('Harmony scores')+
theme_bw()+
stat_summary(fun.y=mean, geom='point', shape=18, size=3, color='red')+
#if you want to see the simulation types side by side:
#  facet_grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
#  coord_flip()
p
dev.off()
}
plot_sim(temp, filename='simulation_plot_for_quechua_longVOT.pdf', ptitle='Quechua, roots only, with [longVOT]')
temp=subset(sims, simname=='2017-03-08_quechua_rootsnew_wb')
plot_sim(temp, filename='simulation_plot_for_quechua_longVOT.pdf', ptitle='Quechua, roots only, with [longVOT]')
temp=subset(sims, simname=='2017-03-08_quechua_rootsnew_wb')
#plot_sim(temp, filename='simulation_plot_for_quechua_stdfeats.pdf', ptitle='Quechua, roots only, standard laryngeal feature set ([cg] and [sg])')
ptitle='Quechua, roots only, standard laryngeal feature set ([cg] and [sg])'
dev.new('simulation_plot_for_quechua_stdfeats.pdf')
p = ggplot(temp, aes(x=wdtype, y=harmony))+
#  geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2)+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.2)+
ggtitle(ptitle)+
ylab('Harmony scores')+
theme_bw()+
stat_summary(fun.y=mean, geom='point', shape=18, size=3, color='red')+
#if you want to see the simulation types side by side:
#  facet_grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
#  coord_flip()
p
dev.off()
temp=subset(sims, simname=='2017-03-07_quechua_rootslongvot_wb')
ptitle='Quechua, roots only, with [longVOT] feature'
dev.new('simulation_plot_for_quechua_longVOT.pdf')
p = ggplot(temp, aes(x=wdtype, y=harmony))+
#  geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2)+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.2)+
ggtitle(ptitle)+
ylab('Harmony scores')+
theme_bw()+
stat_summary(fun.y=mean, geom='point', shape=18, size=3, color='red')+
#if you want to see the simulation types side by side:
#  facet_grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
#  coord_flip()
p
dev.off()
names(pdfFonts)
names(pdfFonts())
#this is for analyzing the results of simulations in the projection learner
basedir = '/home/maria/git/phonotactics'
basedir = '/Users/imac2010/git/phonotactics'
lgname='quechua'
datadir = paste(basedir, 'data', lgname, sep='/')
simdir = paste(basedir, 'sims', sep = '/')
plotdir=paste(basedir,'R', sep='/')
dataversions = list('rootslongvot', 'rootsnew')
#, 'wds', 'wdslongvot')
#the testing data files tell us which words are supposed to be legal and illegal
#testfilekeys = lapply(dataversions, function(x) read.csv(paste(datadir, x, 'TestingData.txt', sep='/'), sep="\t", header=F))
#head(testfilekeys)
#ncol(testfilekeys)
#sim = do.call(rbind, testfilekeys)
sim = read.csv(paste(basedir, '/R/test_key.txt', sep=""), sep="\t", header=F)
colnames(sim)=c('item', 'status')
sim=unique(sim)
#the actual test results from the simulations:
simfolders = list.dirs(simdir)[grepl(lgname, list.dirs(simdir)) & grepl('output_megapruned$', list.dirs(simdir))] #just the quechua ones
simnames=lapply(simfolders, function(x) gsub(simdir, '', x))
simnames=lapply(simnames, function(x) gsub('output_megapruned', '', x))
simtableaux = lapply(simfolders, function(x) read.csv(paste(x, 'tableau.txt', sep='/'), sep="\t", header=T))
for (i in 1:length(simnames)){
simnames[[i]]=gsub('/', '', simnames[[i]])
simtableaux[[i]] = simtableaux[[i]][,1:3]
colnames(simtableaux[[i]])=c('item', 'harmony', 'logprob')
simtableaux[[i]]$simname = simnames[[i]]
}
sims = do.call(rbind, simtableaux)
head(sims)
length(sims$item)
sims = merge(sims, sim)
#PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS  #PLOTS
orderofwdtypes=c("Legal", "*[ʔatʼa]", "*[hatʰa]", "*[pʰatʰa]", "*[pʰat'a]", "*[p'atʰa]","*[pʼatʼa]",  "*[patʰa]", "*[pat'a]")
sims$wdtype="Legal"
#the semi-good ones:
sims$wdtype=ifelse(sims$status=='gl-ej',"*[ʔatʼa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='h-asp',"*[hatʰa]", sims$wdtype)
#the bad hombres:
sims$wdtype=ifelse(sims$status=='asp-asp',"*[pʰatʰa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='asp-ej',"*[pʰat'a]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='ej-asp',"*[p'atʰa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='ej-ej',"*[pʼatʼa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='pl-asp',"*[patʰa]", sims$wdtype)
sims$wdtype=ifelse(sims$status=='pl-ej',"*[pat'a]", sims$wdtype)
sims$wdtype=factor(sims$wdtype, levels=orderofwdtypes)
library(ggplot2)
library(reshape2)
library(extrafont)
library(plyr)
chartmode='screen'
loadfonts()
head(sims)
summary(sims)
#defining the plot viewing device so that it works on linux and mac os
dev.new<-function(filename, pwidth=12, pheight=7){
chartmode='pdf'
filename=paste(plotdir,filename, sep="/")
platform<-sessionInfo()$platform
if(grepl("linux", platform)){
x11(width=pwidth, height=pheight)
pdf(file=filename)
}
else if(grepl('apple', platform)){
quartz(type=chartmode, file=filename, width=pwidth, height=pheight)
}
}
#violin plot function for quechua simulations
#for some reason this isn't working correctly--use the hacky workaround on lines 111+ instead
plot_sim = function(dframe, filename, ptitle=''){
dev.new(filename)
p = ggplot(dframe, aes(x=wdtype, y=harmony))+
#  geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2)+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.2)+
ggtitle(ptitle)+
ylab('Harmony scores')+
theme_bw()+
stat_summary(fun.y=mean, geom='point', shape=18, size=3, color='red')+
#if you want to see the simulation types side by side:
#  facet_grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
#  coord_flip()
p
dev.off()
}
#plot_sim(temp, filename='simulation_plot_for_quechua_longVOT.pdf', ptitle='Quechua, roots only, with [longVOT]')
temp=subset(sims, simname=='2017-03-08_quechua_rootsnew_wb')
#plot_sim(temp, filename='simulation_plot_for_quechua_stdfeats.pdf', ptitle='Quechua, roots only, standard laryngeal feature set ([cg] and [sg])')
ptitle='Quechua, roots only, standard laryngeal feature set ([cg] and [sg])'
dev.new('simulation_plot_for_quechua_stdfeats.pdf')
p = ggplot(temp, aes(x=wdtype, y=harmony))+
#  geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2)+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.2)+
ggtitle(ptitle)+
ylab('Harmony scores')+
theme_bw()+
stat_summary(fun.y=mean, geom='point', shape=18, size=3, color='red')+
#if you want to see the simulation types side by side:
#  facet_grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum O"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
#  coord_flip()
p
dev.off()
temp=subset(sims, simname=='2017-03-07_quechua_rootslongvot_wb')
ptitle='Quechua, roots only, with [longVOT] feature'
dev.new('simulation_plot_for_quechua_longVOT.pdf')
p = ggplot(temp, aes(x=wdtype, y=harmony))+
#  geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2)+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.2)+
ggtitle(ptitle)+
ylab('Harmony scores')+
theme_bw()+
stat_summary(fun.y=mean, geom='point', shape=18, size=3, color='red')+
#if you want to see the simulation types side by side:
#  facet_grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum O"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
#  coord_flip()
p
dev.off()
p = ggplot(temp, aes(x=wdtype, y=harmony))+
#  geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2)+
geom_violin(trim=FALSE)+
geom_boxplot(width=0.2)+
ggtitle(ptitle)+
ylab('Harmony scores')+
theme_bw()+
stat_summary(fun.y=mean, geom='point', shape=18, size=3, color='red')+
#if you want to see the simulation types side by side:
#  facet_grid(.~simname, scales='free', space='free')+
theme(text=element_text(family="Linux Biolinum O"),
panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_blank(),
axis.title.x=element_blank())
#  coord_flip()
p
embed_fonts('simulation_plot_for_quechua_stdfeats.pdf', outfile='simulation_plot_for_quechua_stdfeats.pdf')
library(XML)
setwd('/home/maria/git/transcribers/shona/shona_wikipedia_corpus')
shona<-xmlParse('snwiki-20170301-pages-articles-multistream.xml')
